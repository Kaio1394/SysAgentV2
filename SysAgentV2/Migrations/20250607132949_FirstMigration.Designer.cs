// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SysAgentV2.Data;

#nullable disable

namespace SysAgentV2.Migrations
{
    [DbContext(typeof(SysDbContext))]
    [Migration("20250607132949_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("SysAgentV2.Models.AgentExecutionStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("edited_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("t_status_agent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 7, 13, 29, 49, 605, DateTimeKind.Utc).AddTicks(7200),
                            Status = "STOPPED"
                        });
                });

            modelBuilder.Entity("SysAgentV2.Models.AgentHealthStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("edited_at");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("health_status");

                    b.HasKey("Id");

                    b.ToTable("t_status_health");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 7, 13, 29, 49, 605, DateTimeKind.Utc).AddTicks(7290),
                            HealthStatus = "DISABLED"
                        });
                });

            modelBuilder.Entity("SysAgentV2.Models.CollectMetrics", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CollectdAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("collect_at");

                    b.Property<string>("JsonResult")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("json_result");

                    b.HasKey("Uuid");

                    b.ToTable("t_collect_metrics");
                });

            modelBuilder.Entity("SysAgentV2.Models.Schedulling.Schedule", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("days_of_week");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("TagSchedule")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tag_schedule");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Uuid");

                    b.HasIndex("TagSchedule")
                        .IsUnique();

                    b.ToTable("t_schedules");
                });

            modelBuilder.Entity("SysAgentV2.Models.Schedulling.ScheduleScripts", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int>("ExecutionOrder")
                        .HasColumnType("INTEGER")
                        .HasColumnName("execution_order");

                    b.Property<string>("ScheduleUuid")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("schedule_uuid");

                    b.Property<string>("ScriptsUuid")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("script_uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Uuid");

                    b.HasIndex("ScheduleUuid");

                    b.HasIndex("ScriptsUuid");

                    b.ToTable("t_schedule_scripts_cmd");
                });

            modelBuilder.Entity("SysAgentV2.Models.Scripts.ScripFile", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("file_path");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("language");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tag");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Uuid");

                    b.ToTable("t_repo_scripts_file");
                });

            modelBuilder.Entity("SysAgentV2.Models.Scripts.ScriptCmd", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Script")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("script");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tag");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Uuid");

                    b.ToTable("t_repo_scripts_cmd");
                });

            modelBuilder.Entity("SysAgentV2.Models.Schedulling.ScheduleScripts", b =>
                {
                    b.HasOne("SysAgentV2.Models.Schedulling.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SysAgentV2.Models.Scripts.ScriptCmd", "ScriptCmd")
                        .WithMany()
                        .HasForeignKey("ScriptsUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("ScriptCmd");
                });
#pragma warning restore 612, 618
        }
    }
}
